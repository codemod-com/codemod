# yaml-language-server: $schema=../schemas/workflow.json
version: "1"
# Run with: codemod run -w examples/node_step_workflow.yaml --param test=1234 --param branch=begin
# Observe that the initial params are printed, and that the template gets its
# correct params (which can shadow the main workflow params)
nodes:
  - id: setup
    name: Setup Environment
    description: Set up the environment for the workflow
    type: automatic
    steps:
      - name: Check Environment
        run: |
          #!/usr/bin/env bash
          echo "Running environment check"
          echo "Current directory: $(pwd)"
          echo "Files in directory:"
          echo 'Initial params: ${{params.test}}, ${{params.branch}}'
          ls -la
    env:
      DEBUG: "true"
      WORKSPACE: "${{env.WORKSPACE}}"

  - id: process-data
    name: Process Data
    description: Process data files
    type: automatic
    depends_on:
      - setup
    strategy:
      type: matrix
      from_state: files
    steps:
      - name: Validate File
        run: |
          #!/usr/bin/env bash
          echo "Validating file: $file"
          echo "File exists: $(test -f $file && echo 'Yes' || echo 'No')"

      - name: Process File
        run: |
          #!/usr/bin/env bash
          echo "Processing file: $file"
          echo "File content would be processed here"
    env:
      DEBUG: "true"

  - id: generate-report
    name: Generate Report
    description: Generate a report from the processed data
    type: automatic
    depends_on:
      - process-data
    steps:
      - name: Collect Results
        use:
          template: checkout-repo
          inputs:
            repo_url: https://github.com/neovim/neovim
            branch: master

      - name: Create Report
        run: |
          #!/usr/bin/env python
          import os
          import sys

          print("Creating report")
          print(f"Python version: {sys.version}")
          print("Report would be created here")
        env:
          SCRIPT_LANGUAGE: "python"
    env:
      REPORT_FORMAT: "html"

templates:
  - id: checkout-repo
    name: Checkout Repository
    description: Standard process for checking out a repository
    inputs:
      - name: repo_url
        type: string
        required: true
        description: "URL of the repository to checkout"
      - name: branch
        type: string
        default: "main"
        description: "Branch to checkout"
    steps:
      - name: Clone repository
        run: |
          #!/usr/bin/env bash
          echo "Cloning repository ${{params.repo_url}} branch ${{params.branch}}"
          echo "Repository would be cloned here"

state:
  schema:
    - name: files
      type: array
      items:
        type: object
        properties:
          file:
            type: string
